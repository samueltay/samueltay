{
  "experience": [
    {
      "name": "Dexterity Robotics",
      "title": "Robotics Software Engineer",
      "description": [
        "Dexterity is a Series B startup ($1.4B valuation) backed by Kleiner Perkins and Lightspeed Ventures. I joined as an early employee (~30) and made core contributions to the algorithms and simulations software stack. As an early employee at a high-growth startup, I was fortunate to be able to wear many hats, including also working on UI/UX, CI/CD automation, GCP deployments and automation, computer vision, robotic controls, recruiting, and much more. I have served as the team lead on several projects, managing engineering tasks and product requirements for my team.",

        "One of my large contributions was designing and implementing a high-performance state management service capable of storing and modifying large, generic Protobuf state objects. This service efficiently processed thousands of CRUD requests per minute while ensuring persistence and extensibility. It was successfully deployed in a high-uptime warehouse with 16 robots, managing and tracking over 50,000 objects and handling more than 1 million requests daily.",

        "Another significant achievement was the development of a next-generation asynchronous robotic task allocation and dispatch system. This system incorporated an adapter system to accommodate the specific business-logic needs of three different product lines within the company. Over 20 different adapters were created, and the system was productionized with error handling, request timeouts, and order handling.",

        "I also collaborated on the development of core algorithms for various products. This involved implementing search-based and MIP-based algorithms for order fulfillment within a hierarchical scheduler that decomposed objectives in a modular manner. Additionally, I contributed to enhancing heuristics and improving physics simulation fidelity for online 3D-bin packing and pallet building problems.",

        "To improve efficiency and reliability, I created a scalable automated regression simulation pipeline. This pipeline was capable of running large-scale simulations automatically and leveraged Terraform to provision virtual machines in the Google Cloud Platform. It played a crucial role in detecting over a dozen regressions before deployment to production, facilitating large-scale parameter tuning experiments, and integrating with the customer's Warehouse Management System for predictive planning."
      ],
      "image_path": "/logos/dexterity_logo.jpg"
    },
    {
      "name": "UC Berkeley Model Predictive Control Lab",
      "title": "Student Research Assistant",
      "description": [
        "After my first two years at UC Berkeley, I developed an interest in control theory and computer science, and I shifted my focus away from mechanical design. During the summer after my second year, I applied and was accepted to the Student Mentoring and Research Teams (SMART) program, which provided a stipend and a graduate student mentor to pursue a reseach project over the summer. The project involved using Model Predictive Control (MPC) to improve the fuel efficiency of an autonomous vehicle. After my summer research was completed, I joined the MPC Lab part-time during the school year and was advised by Prof. Francesco Borrelli.",

        "During my time as a research assistant at the UC Berkeley MPC lab, I undertook various projects and tasks that contributed to the advancement of vehicle control and traffic simulation. I played a pivotal role in modeling the Arcadia corridor road network using Tass PreScan. This allowed for comprehensive vehicle control and traffic simulation within a realistic environment. To replicate real-world traffic flow data, I integrated the PTV VisSim microtraffic simulator with PreScan. By leveraging actual Sensys data, I was able to accurately simulate traffic patterns and behavior.",

        "In collaboration with the team, I participated in real-world testing and data collection of an adaptive cruise control system based on Model Predictive Control (MPC). The objective was to reduce fuel consumption by optimizing the vehicle's speed profile. To gain insights from the collected data, I filtered and analyzed it, focusing on identifying trends between the controller's conservatism and fuel consumption. This analysis provided valuable information for further refinement of the adaptive cruise control system.",

        "In an effort to further optimize fuel reduction in autonomous vehicles, I implemented a Learning Model Predictive Controller. This controller was specifically designed for vehicles repeatedly traveling along the same trajectory, ensuring efficient and economical driving behavior.",

        "To facilitate efficient testing and tuning of control algorithms, I developed a Hardware-in-the-Loop simulation platform. This platform utilized simulated data and integrated test vehicle hardware, enabling rapid and accurate evaluation of control algorithms within a controlled environment."
      ],
      "image_path": "/logos/mpc_logo.png"
    },
    {
      "name": "Aptiv Autonomous Mobility",
      "title": "Autonomous Vehicle Controls Intern",
      "description": ["Placeholder"],
      "description_": [
        "During my internship as a Controls Engineer at Aptiv, I had the opportunity to delve into cutting-edge research papers on optimal control, state estimation, and deep learning. This allowed me to stay updated on the latest advancements in these areas and apply them to real-world scenarios.",

        "One of my key responsibilities was to evaluate the accuracy, complexity, and robustness of various physics-based vehicle models. This involved analyzing kinematic, linear-dynamic, and non-linear dynamic bicycle models, as well as different tire models. Through rigorous testing under different circumstances, I determined the most suitable models for integration into the controller stack.",

        "In addition to traditional modeling approaches, I took on the challenge of exploring a data-driven, learning-based approach to vehicle modeling and parameter identification. I successfully developed a Neural Network-based vehicle model using PyTorch. To train the model, I utilized physics-based data to initialize its weights and then fine-tuned them using collected data.",

        "A crucial aspect of my internship involved enhancing vehicle state estimation for optimal control. To achieve this, I implemented and compared two advanced algorithms: the Kalman Filter and Moving Horizon Estimation. By evaluating their performance, I was able to improve the accuracy and reliability of the vehicle state estimation process.",

        "Overall, my internship experience at Aptiv as a Controls Engineer allowed me to gain extensive knowledge and practical skills in optimal control, state estimation, and deep learning. I actively engaged with the latest research, evaluated and implemented different vehicle models, developed Neural Network-based models, and enhanced vehicle state estimation algorithms to contribute to the advancement of Aptiv's control systems."
      ],
      "image_path": "/logos/aptiv_logo.png"
    },
    {
      "name": "Ford Greenfield Labs",
      "title": "Autonomous Vehicle Simulation Research Intern",
      "description": ["Placeholder"],
      "description_": [
        "During my tenure as an Autonomous Vehicle Simulation Software Engineer at Ford Greenfield Labs, I worked on various projects involving simulator development and innovative solutions. I built a high-fidelity simulator using Unreal Engine, which played a vital role in generating synthetic training data. This simulator provided a realistic environment for testing and training autonomous vehicle systems, enabling the collection of diverse and representative data for algorithm development and validation. To enhance the accuracy and quality of ground truth data obtained from raw videos, I created semantic segmentation and depth map filters. These filters processed the data to extract meaningful information such as object labels and depth information, which are crucial for training perception algorithms.",

        "I developed an efficient LIDAR modeling technique for implementation in the simulator. This involved designing and implementing algorithms that accurately replicate LIDAR sensor data within the simulated environment. The technique contributed to realistic perception simulations and improved the fidelity of sensor-based algorithms.",

        "In addition to simulator development, I participated in an internal Hackathon where my team developed an automated parking spot detection system. Leveraging sensors in future large fleets of autonomous vehicles, our system constantly updated information about available parking spaces on streets or in parking lots. This innovative solution aimed to enhance parking efficiency and facilitate autonomous vehicle navigation in urban environments.",

        "As an Autonomous Vehicle Simulation Software Engineer at Ford Greenfield Labs, I played a key role in simulator development, ground truth data processing, LIDAR modeling, and the creation of an automated parking spot detection system. These contributions showcased my expertise in simulation technologies, perception algorithms, and innovative problem-solving within the autonomous vehicle domain."
      ],
      "image_path": "/logos/ford_logo.png"
    }
  ]
}
